{"remainingRequest":"/var/www/html/currency-vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/var/www/html/currency-vue/src/components/CurrencyHistoryComponent.vue?vue&type=style&index=0&id=4d54142a&scoped=true&lang=css","dependencies":[{"path":"/var/www/html/currency-vue/src/components/CurrencyHistoryComponent.vue","mtime":1606470515758},{"path":"/var/www/html/currency-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/currency-vue/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/currency-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/currency-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/currency-vue/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmhyewogIHdpZHRoOiAxMDAlOwp9Ci53aWR0aDEwMHsKICB3aWR0aDoxMDAlOwp9Ci53aWR0aDI1ewogIHdpZHRoOiA0MCU7CiAgZmxvYXQ6IGxlZnQ7Cn0K"},{"version":3,"sources":["/var/www/html/currency-vue/src/components/CurrencyHistoryComponent.vue"],"names":[],"mappings":";AA2IA,CAAC,CAAC;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb","file":"/var/www/html/currency-vue/src/components/CurrencyHistoryComponent.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"main-container\">\n    <h1 class=\"main-title\">Currency History</h1>\n\n    <div class=\"box-wrap\">\n      <div class=\"width100\">\n\n        <div class=\"show-detail width25\">Name : {{ currency.Name }}</div>\n        <div class=\"show-detail width25\">Id : {{ currency.ID }}</div>\n        <div class=\"show-detail width25\">NumCode : {{ currency.NumCode }}</div>\n        <div class=\"show-detail width25\">CharCode : {{ currency.CharCode }}</div>\n        <div class=\"show-detail width25\">Nominal : {{ currency.Nominal }}</div>\n        <div class=\"show-detail width25\">&nbsp;</div>\n      </div>\n        <hr>\n      <table>\n        <thead>\n          <tr>\n            <th>S No.</th>\n            <th>Rate</th>\n            <th>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in currency_list\"\n              :key=\"item\"\n              >\n            <td>{{ index+1 }}</td>\n            <td>{{ item.price }}</td>\n            <td>{{ item.currency_date }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div v-show=\"noItemSelectedForMoveMsg !== ''\" class=\"error-div\">\n      {{ noItemSelectedForMoveMsg }}\n    </div>\n  </div>\n</template>\n\n<script>\nif (localStorage.getItem(\"item_management_token\") === null) {\n  // localStorage.setItem(\"item_management_token\", uniqueToken.join(\"\"));\n}\nconst APIURL = \"http://localhost/currency_api/\";\nimport axios from \"axios\";\nimport DefaultLayout from \"../layouts/DefaultLayout\";\n\nexport default {\n  name: \"CurrencyHistoryComponent\",\n  created() {\n    this.getCurrencyList(), this.$emit(\"update:layout\", DefaultLayout);\n  },\n  data() {\n    return {\n      id: this.$route.params.id,\n      currency_list: [],\n      currency:{}\n      \n    };\n  },\n  methods: {\n    add() {},\n    addToRight() {\n      // console.log(  )\n    },\n    addToLeft() {},\n    activate: function (el) {\n      this.active_el = el;\n    },\n    isElementSelected() {},\n    isSelectedItemInRight() {},\n    saveItem: function (name, position) {\n      const data = {\n        name: name,\n        position: position,\n        token: localStorage.getItem(\"item_management_token\"),\n      };\n      const response = axios.post(APIURL + \"api/item/add-update\", data);\n      response\n        .then((response) => {\n          console.log(response.data);\n        })\n        .catch((e) => {\n          var error = e.response.data;\n          console.log(error);\n        });\n    },\n    getCurrencyList() {\n      this.currency = {\n          ID: 1,\n          NumCode: 36,\n          CharCode: \"AUD\",\n          Nominal: 1,\n          Name: \"Австралийский доллар\",\n      }\n      this.currency_list = [\n        {\n          price: 100,\n          currency_date: \"2020-11-20\",\n        },\n        {\n          price: 100,\n          currency_date: \"2020-11-20\",\n        },\n        {\n          price: 100,\n          currency_date: \"2020-11-20\",\n        },\n        {\n          price: 100,\n          currency_date: \"2020-11-20\",\n        },\n      ];\n      /*\n      const data = { token: localStorage.getItem(\"item_management_token\") };\n      const response = axios.get(APIURL + \"api/item/get/list\", {\n        params: data,\n      });\n      response\n        .then((response) => {\n          var currency_list = response.data.data;\n          currency_list.forEach((e) => {\n            this.item_list.push(e.name);\n            this.left_items.push(e.name);\n          });\n        })\n        .catch((e) => {\n          var error = e.response.data;\n          console.log(error);\n        });\n        */\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nhr{\n  width: 100%;\n}\n.width100{\n  width:100%;\n}\n.width25{\n  width: 40%;\n  float: left;\n}\n</style>"]}]}